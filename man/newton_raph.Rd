% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/newton_raph.R
\name{newton_raph}
\alias{newton_raph}
\title{Multivariate Newton-Raphson fitting method}
\usage{
newton_raph(vec_J, Max.it, prec, par0, step.scale, ...)
}
\arguments{
\item{vec_J}{a function which returns newton-raphson steps via \code{$step}}

\item{Max.it}{Maximum number of iterations}

\item{prec}{Parameter precision tolerance. Iteration will stop when the step is
smaller than the precision for all parameters.}

\item{par0}{Initial values for the parameters to be optimized over.}

\item{step.scale}{Scale the step size using a size on the interval (0,1]. This is sometimes
referred to as the relaxed or damped Newton's method.}

\item{...}{Further arguments to be passed to \code{vec_J}}
}
\value{
A list containing the \code{par} estimates and
an evaluation of the \code{vec_J} function at these parameters.
}
\description{
\code{newton_raph} provides an environment for performing iterated
Newton Raphson root finding of multivariate functions
}
\examples{
#Optimisation of the function f(x,y) = (x*exp(y) - 1, -1-x^2 + y)
vec_J <- function(par){
    x=par[1]
    y=par[2]
    f = c(x*exp(y) - 1, -1-x^2 + y)
    fdash = matrix(c(exp(y),-2*x,x*exp(y),1),ncol=2)
    step = solve(fdash,f)
    return(list(step=step))
}

newton_raph(vec_J,Max.it=1000,prec=1e-6,par0=c(0,0),step.scale=1)

}
